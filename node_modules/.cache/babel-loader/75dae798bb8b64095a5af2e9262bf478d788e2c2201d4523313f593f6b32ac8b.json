{"ast":null,"code":"// src/serviceWorkerRegistration.js\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\nexport function register() {\n  if ('serviceWorker' in navigator) {\n    const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n    window.addEventListener('load', () => {\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) return;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            console.log('New content is available; please refresh.');\n          } else {\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  }).catch(error => console.error('Error during service worker registration:', error));\n}\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl).then(response => {\n    const contentType = response.headers.get('content-type');\n    if (response.status === 404 || contentType != null && contentType.indexOf('javascript') === -1) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      registerValidSW(swUrl);\n    }\n  }).catch(() => {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","swUrl","process","env","PUBLIC_URL","addEventListener","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload"],"sources":["/Users/yongjisun/Desktop/gostop/src/serviceWorkerRegistration.js"],"sourcesContent":["// src/serviceWorkerRegistration.js\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register() {\n    if ('serviceWorker' in navigator) {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n        window.addEventListener('load', () => {\n            if (isLocalhost) {\n                checkValidServiceWorker(swUrl);\n            } else {\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) return;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    fetch(swUrl)\n        .then(response => {\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGC,OAAO,CACvBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO,IACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC1B,wDACJ,CACJ,CAAC;AAED,OAAO,SAASC,QAAQA,CAAA,EAAG;EACvB,IAAI,eAAe,IAAIC,SAAS,EAAE;IAC9B,MAAMC,KAAK,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB;IAC3DT,MAAM,CAACU,gBAAgB,CAAC,MAAM,EAAE,MAAM;MAClC,IAAIZ,WAAW,EAAE;QACba,uBAAuB,CAACL,KAAK,CAAC;MAClC,CAAC,MAAM;QACHM,eAAe,CAACN,KAAK,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN;AACJ;AAEA,SAASM,eAAeA,CAACN,KAAK,EAAE;EAC5BD,SAAS,CAACQ,aAAa,CAClBT,QAAQ,CAACE,KAAK,CAAC,CACfQ,IAAI,CAACC,YAAY,IAAI;IAClBA,YAAY,CAACC,aAAa,GAAG,MAAM;MAC/B,MAAMC,gBAAgB,GAAGF,YAAY,CAACG,UAAU;MAChD,IAAID,gBAAgB,IAAI,IAAI,EAAE;MAC9BA,gBAAgB,CAACE,aAAa,GAAG,MAAM;QACnC,IAAIF,gBAAgB,CAACG,KAAK,KAAK,WAAW,EAAE;UACxC,IAAIf,SAAS,CAACQ,aAAa,CAACQ,UAAU,EAAE;YACpCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;UAC5D,CAAC,MAAM;YACHD,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;UACrD;QACJ;MACJ,CAAC;IACL,CAAC;EACL,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC,CAAC;AAC1F;AAEA,SAASd,uBAAuBA,CAACL,KAAK,EAAE;EACpCoB,KAAK,CAACpB,KAAK,CAAC,CACPQ,IAAI,CAACa,QAAQ,IAAI;IACd,MAAMC,WAAW,GAAGD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IACxD,IACIH,QAAQ,CAACI,MAAM,KAAK,GAAG,IACtBH,WAAW,IAAI,IAAI,IAAIA,WAAW,CAACI,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAE,EACnE;MACE3B,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAACC,YAAY,IAAI;QAC/CA,YAAY,CAACmB,UAAU,CAAC,CAAC,CAACpB,IAAI,CAAC,MAAM;UACjCd,MAAM,CAACC,QAAQ,CAACkC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,MAAM;MACHvB,eAAe,CAACN,KAAK,CAAC;IAC1B;EACJ,CAAC,CAAC,CACDkB,KAAK,CAAC,MAAM;IACTF,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;EAChF,CAAC,CAAC;AACV;AAEA,OAAO,SAASW,UAAUA,CAAA,EAAG;EACzB,IAAI,eAAe,IAAI7B,SAAS,EAAE;IAC9BA,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAACC,YAAY,IAAI;MAC/CA,YAAY,CAACmB,UAAU,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}